Bridge.assembly("Cable.Bridge",function(){"use strict";Bridge.define("Cable.Bridge.Client",{statics:{interfacesCache:null,config:{init:function(){this.interfacesCache=new(System.Collections.Generic.Dictionary$2(String,Object))}},toCamelCase:function(input){var output,i;if(!System.String.isNullOrEmpty(input)){for(output="",output=System.String.concat(output,String.fromCharCode(String.fromCharCode(input.charCodeAt(0)).toLowerCase().charCodeAt(0))),i=1;i<input.length;i=i+1|0)output=System.String.concat(output,String.fromCharCode(input.charCodeAt(i)));return output}return""},postJsonSync:function(url,data){var xmlHttp=new XMLHttpRequest,serialized,json;if(xmlHttp.open("POST",url,!1),serialized=Cable.Bridge.Json.serialize(data),xmlHttp.send(serialized),xmlHttp.status===200||xmlHttp.status===304)if(json=JSON.parse(xmlHttp.responseText),json.$exception)throw new System.Exception(json.$exceptionData.Message);else return Cable.Bridge.Json.deserialize(Object,xmlHttp.responseText);else throw new System.Exception(System.String.concat("Error: ",xmlHttp.statusText,"\n",xmlHttp.responseText));},postJsonAsync:function(url,data){var $step=0,$task1,$taskResult1,$tcs=new System.Threading.Tasks.TaskCompletionSource,tcs,xmlHttp,serialized,$async_e,$asyncBody=Bridge.fn.bind(this,function(){try{for(;;){$step=System.Array.min([0,1],$step);switch($step){case 0:tcs=new System.Threading.Tasks.TaskCompletionSource;xmlHttp=new XMLHttpRequest;xmlHttp.open("POST",url,!0);xmlHttp.setRequestHeader("Content-Type","application/json");xmlHttp.onreadystatechange=function(){var json,result;if(xmlHttp.readyState===4)if(xmlHttp.status===200||xmlHttp.status===304){if(json=JSON.parse(xmlHttp.responseText),json.$exception){tcs.setException(new System.Exception(json.$exceptionData.Message));return}result=Cable.Bridge.Json.deserialize(Object,xmlHttp.responseText);tcs.setResult(result)}else tcs.setException(new System.Exception(xmlHttp.statusText))};serialized=Cable.Bridge.Json.serialize(data);xmlHttp.send(serialized);$task1=tcs.task;$step=1;$task1.continueWith($asyncBody);return;case 1:$taskResult1=$task1.getAwaitedResult();$tcs.setResult($taskResult1);return;default:$tcs.setResult(null);return}}}catch($async_e1){$async_e=System.Exception.create($async_e1);$tcs.setException($async_e)}},arguments);return $asyncBody(),$tcs.task},resolve:function(T){var $t,serviceType=T,serviceName=Bridge.Reflection.getTypeName(serviceType),serviceFullName=System.String.replaceAll(Bridge.Reflection.getTypeFullName(serviceType),".","$"),methods,service;if(Cable.Bridge.Client.interfacesCache.containsKey(serviceFullName))return Cable.Bridge.Client.interfacesCache.get(serviceFullName);if(!Bridge.Reflection.isInterface(serviceType))throw new System.ArgumentException(System.String.format("Type {0} must be an interface",Bridge.Reflection.getTypeName(serviceType)));if(methods=Bridge.Reflection.getMembers(serviceType,8,28),methods.length===0)throw new System.ArgumentException("The interface does not have any methods, if there are any methods then annotate the interface with the [Reflectable] attribute");for(service={},$t=Bridge.getEnumerator(methods);$t.moveNext();)(function(){var method=$t.getCurrent(),methodName=method.n;service[System.String.format("{0}${1}",serviceFullName,methodName)]=Bridge.referenceEquals(method.rt,System.Threading.Tasks.Task)?function(){var $step=0,$task1,$taskResult1,$tcs=new System.Threading.Tasks.TaskCompletionSource,parameters,url,result,$async_e,$asyncBody=Bridge.fn.bind(this,function(){try{for(;;){$step=System.Array.min([0,1],$step);switch($step){case 0:parameters=System.Linq.Enumerable.from(arguments).toArray();url=System.String.format("/{0}/{1}",serviceName,methodName);$task1=Cable.Bridge.Client.postJsonAsync(url,parameters);$step=1;$task1.continueWith($asyncBody);return;case 1:$taskResult1=$task1.getAwaitedResult();result=$taskResult1;$tcs.setResult(result);return;default:$tcs.setResult(null);return}}}catch($async_e1){$async_e=System.Exception.create($async_e1);$tcs.setException($async_e)}},arguments);return $asyncBody(),$tcs.task}:function(){var parameters=System.Linq.Enumerable.from(arguments).toArray(),url=System.String.format("/{0}/{1}",serviceName,methodName);return Cable.Bridge.Client.postJsonSync(url,parameters)}}).call(this);return Cable.Bridge.Client.interfacesCache.add(serviceFullName,service),service}}});Bridge.define("Cable.Bridge.Converters",{statics:{isNumeric:function(value){return Bridge.is(value,System.SByte)||Bridge.is(value,System.Byte)||Bridge.is(value,System.Int16)||Bridge.is(value,System.UInt16)||Bridge.is(value,System.Int32)||Bridge.is(value,System.UInt32)||Bridge.is(value,System.Int64)||Bridge.is(value,System.UInt64)||Bridge.is(value,System.Single)||Bridge.is(value,System.Double)||Bridge.is(value,System.Decimal)},isPrimitive:function(value){return Bridge.is(value,String)||Bridge.is(value,System.Char)||Bridge.is(value,Boolean)||Bridge.is(value,Date)||Bridge.is(value,System.TimeSpan)||Cable.Bridge.Converters.isNumeric(value)},isArray:function(obj){var type=Bridge.getType(obj);return Bridge.referenceEquals(Bridge.Reflection.getTypeName(type),"Array")||System.String.endsWith(Bridge.Reflection.getTypeFullName(type),"[]")||Bridge.referenceEquals(Bridge.Reflection.getTypeName(type),"ArrayEnumerable")||Bridge.isDefined(obj.toArray)},extactExistingProps:function(input){for(var property,keys=Object.keys(input),props=[],i=0;i<keys.length;i=i+1|0)System.String.startsWith(keys[i],"$")||(property=Bridge.merge(new Cable.Bridge.Property,{setName:keys[i],setType:Bridge.getType(input[keys[i]]),setValue:input[keys[i]]}),props.push(property));return props},encodeDateTime:function(time){var result={},value;return result.IsPrimitive=!0,result.IsArray=!1,result.Type="DateTime",result.IsNumeric=!1,value={},value.Year=time.getFullYear(),value.Month=time.getMonth()+1,value.Day=time.getDate(),value.Hour=time.getHours(),value.Minute=time.getMinutes(),value.Second=time.getSeconds(),value.Millisecond=time.getMilliseconds(),result.Value=value,result},encodeNumeric:function(value){var result={};return result.IsPrimitive=!0,result.IsArray=!1,result.IsNumeric=!0,result.Type=Bridge.Reflection.getTypeName(Bridge.getType(value)),result.Value=value.toString(),result},encodeChar:function(value){var result={};return result.IsPrimitive=!0,result.IsArray=!1,result.IsNumeric=!1,result.Type="Char",result.Value=value,result},encodeString:function(value){var result={};return result.IsPrimitive=!0,result.IsArray=!1,result.IsNumeric=!1,result.Type="String",result.Value=value,result},encodeBoolean:function(value){var result={};return result.IsPrimitive=!0,result.IsArray=!1,result.IsNumeric=!1,result.Type="Boolean",result.Value=value,result},encodeTimeSpan:function(timeSpan){var result={};return result.IsPrimitive=!0,result.IsArray=!1,result.IsNumeric=!1,result.Type="TimeSpan",result.Value=timeSpan.getTicks().toString(),result},encodeObject:function(T,value){var $t,type=Bridge.getType(value),result,values,i,subValue,list,valuesFromList,i1,list1,valuesFromList1,i2,list2,valuesFromList2,i3,result1,props,prop;if(Cable.Bridge.Converters.isPrimitive(value))return Bridge.referenceEquals(type,Date)?Cable.Bridge.Converters.encodeDateTime(value):Bridge.referenceEquals(type,System.Char)?Cable.Bridge.Converters.encodeChar(value):Cable.Bridge.Converters.isNumeric(value)?Cable.Bridge.Converters.encodeNumeric(value):Bridge.referenceEquals(type,String)?Cable.Bridge.Converters.encodeString(value):Bridge.referenceEquals(type,Boolean)?Cable.Bridge.Converters.encodeBoolean(value):Bridge.referenceEquals(type,System.TimeSpan)?Cable.Bridge.Converters.encodeTimeSpan(value):null;if(Cable.Bridge.Converters.isArray(value)){if(result={},result.IsPrimitive=!0,result.IsArray=!0,result.IsNumeric=!1,Bridge.referenceEquals(Bridge.Reflection.getTypeName(type),"Array")){for(result.Type="Array",values=[],i=0;i<value.length;i=i+1|0)subValue=Cable.Bridge.Converters.encodeObject(Object,value[i]),values.push(subValue);return result.Value=values,result}if(System.String.startsWith(Bridge.Reflection.getTypeFullName(type),"System.Collections.Generic.List")){for(result.Type="List",list=value.toArray(),valuesFromList=System.Array.init(list.length,null),i1=0;i1<list.length;i1=i1+1|0)valuesFromList[i1]=Cable.Bridge.Converters.encodeObject(Object,list[i1]);return result.Value=valuesFromList,result}if(Bridge.referenceEquals(Bridge.Reflection.getTypeName(type),"ArrayEnumerable")){for(result.Type="Array",list1=System.Linq.Enumerable.from(value).toArray(),valuesFromList1=System.Array.init(list1.length,null),i2=0;i2<list1.length;i2=i2+1|0)valuesFromList1[i2]=Cable.Bridge.Converters.encodeObject(Object,list1[i2]);return result.Value=valuesFromList1,result}try{for(result.Type="Array",list2=System.Linq.Enumerable.from(value).toArray(),valuesFromList2=System.Array.init(list2.length,null),i3=0;i3<list2.length;i3=i3+1|0)valuesFromList2[i3]=Cable.Bridge.Converters.encodeObject(Object,list2[i3]);return result.Value=valuesFromList2,result}catch($e1){return $e1=System.Exception.create($e1),null}}else{for(result1={},result1.IsPrimitive=!1,result1.IsArray=!1,result1.IsNumeric=!1,result1.Type=Bridge.Reflection.getTypeFullName(Bridge.getType(value)),props={},$t=Bridge.getEnumerator(Cable.Bridge.Converters.extactExistingProps(value));$t.moveNext();)prop=$t.getCurrent(),props[prop.getName()]=Cable.Bridge.Converters.encodeObject(prop.getType(),prop.getValue());return result1.Value=props,result1}},decodeObject:function(T,json){var type=json.Type,encodedItems,arr,i,encodedItems1,list,i1,typeName,instance,propNames,i2;if(json.IsPrimitive&&!json.IsArray){if(Bridge.referenceEquals(type,"DateTime")){var year=json.Value.Year,month=json.Value.Month,day=json.Value.Day,hour=json.Value.Hour,minute=json.Value.Minute,second=json.Value.Second,milliseconds=json.Value.Millisecond;return new Date(year,month-1,day,hour,minute,second,milliseconds)}return Bridge.referenceEquals(type,"String")?json.Value:Bridge.referenceEquals(type,"TimeSpan")?System.TimeSpan.fromTicks(System.Int64.parse(json.Value)):Bridge.referenceEquals(type,"UInt16")?System.UInt16.parse(json.Value):Bridge.referenceEquals(type,"UInt32")?System.UInt32.parse(json.Value):Bridge.referenceEquals(type,"UInt64")?System.UInt64.parse(json.Value):Bridge.referenceEquals(type,"Int16")?System.Int16.parse(json.Value):Bridge.referenceEquals(type,"Int32")?System.Int32.parse(json.Value):Bridge.referenceEquals(type,"Int64")?System.Int64.parse(json.Value):Bridge.referenceEquals(type,"Double")?System.Double.parse(json.Value):Bridge.referenceEquals(type,"Decimal")?System.Decimal(json.Value):Bridge.referenceEquals(type,"Byte")?System.Byte.parse(json.Value):Bridge.referenceEquals(type,"Boolean")?json.Value:null}if(json.IsArray){if(Bridge.referenceEquals(json.Type,"Array")){for(encodedItems=json.Value,arr=System.Array.init(encodedItems.length,null),i=0;i<encodedItems.length;i=i+1|0)arr[i]=Cable.Bridge.Converters.decodeObject(Object,encodedItems[i]);return arr}if(Bridge.referenceEquals(json.Type,"List")){for(encodedItems1=json.Value,list=new(System.Collections.Generic.List$1(Object)),i1=0;i1<encodedItems1.length;i1=i1+1|0)list.add(Cable.Bridge.Converters.decodeObject(Object,encodedItems1[i1]));return list}return null}for(typeName=json.Type,console.log(typeName),instance=Bridge.createInstance(Bridge.Reflection.getType(typeName)),propNames=Cable.Bridge.Converters.objectKeys(json.Value),console.log(propNames),i2=0;i2<propNames.length;i2=i2+1|0){var propValue=json.Value[propNames[i2]],decoded=Cable.Bridge.Converters.decodeObject(Object,propValue),setPropName=System.String.concat("set",propNames[i2]);console.log(setPropName);console.log(instance);instance[setPropName](decoded)}return instance},objectKeys:function(obj){return Object.keys(obj)}}});Bridge.define("Cable.Bridge.Json",{statics:{serialize:function(obj){var encoded=Cable.Bridge.Converters.encodeObject(Object,obj);return JSON.stringify(encoded)},deserialize:function(T,json){var parsed=JSON.parse(json);return Cable.Bridge.Converters.decodeObject(T,parsed)}}});Bridge.define("Cable.Bridge.Property",{config:{properties:{Name:null,Type:null,Value:null}}})});